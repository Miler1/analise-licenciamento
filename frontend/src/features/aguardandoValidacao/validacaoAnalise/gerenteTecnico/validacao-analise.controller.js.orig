<<<<<<< HEAD
var ValidacaoAnaliseTecnicaController = function($rootScope, analiseTecnicaService, $route, $scope, 
		mensagem, $location, documentoAnaliseService, processoService, $uibModal, analistaService) {

    var validacaoAnaliseTecnica = this;

    validacaoAnaliseTecnica.analiseTecnicaValidacao = {};

    validacaoAnaliseTecnica.init = init;
    validacaoAnaliseTecnica.exibirDadosProcesso = exibirDadosProcesso; 
    validacaoAnaliseTecnica.exibirAnaliseJuridica = exibirAnaliseJuridica;
    validacaoAnaliseTecnica.downloadDocumentoAnalise = downloadDocumentoAnalise;
	validacaoAnaliseTecnica.isParecerNaoValidado = isParecerNaoValidado;
	validacaoAnaliseTecnica.isObrigatorio = isObrigatorio;
	validacaoAnaliseTecnica.cancelar = cancelar;
	validacaoAnaliseTecnica.concluir = concluir;  
    validacaoAnaliseTecnica.TiposResultadoAnalise = app.utils.TiposResultadoAnalise;  
=======
var ValidacaoAnaliseTecnicaGerenteController = function($rootScope, analiseTecnicaService, $route, $scope, 
		mensagem, $location, documentoAnaliseService, processoService, $uibModal, analistaService) {

    var validacaoAnaliseTecnicaGerente = this;

    validacaoAnaliseTecnicaGerente.analiseTecnicaValidacao = {};

    validacaoAnaliseTecnicaGerente.init = init;
    validacaoAnaliseTecnicaGerente.exibirDadosProcesso = exibirDadosProcesso; 
    validacaoAnaliseTecnicaGerente.exibirAnaliseJuridica = exibirAnaliseJuridica;
    validacaoAnaliseTecnicaGerente.downloadDocumentoAnalise = downloadDocumentoAnalise;
	validacaoAnaliseTecnicaGerente.isParecerNaoValidado = isParecerNaoValidado;
	validacaoAnaliseTecnicaGerente.isObrigatorio = isObrigatorio;
	validacaoAnaliseTecnicaGerente.cancelar = cancelar;
	validacaoAnaliseTecnicaGerente.concluir = concluir;  
    validacaoAnaliseTecnicaGerente.TiposResultadoAnalise = app.utils.TiposResultadoAnalise;  
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539

    function init() {

		analiseTecnicaService.getAnaliseTecnica($route.current.params.idAnalise)
			.then(function(response){
<<<<<<< HEAD
				validacaoAnaliseTecnica.analiseTecnica = response.data;

				validacaoAnaliseTecnica.analiseTecnicaValidacao.idAnalistaTecnico =
					validacaoAnaliseTecnica.analiseTecnica.analistasTecnicos[0].usuario.id;                
=======
				validacaoAnaliseTecnicaGerente.analiseTecnica = response.data;

				validacaoAnaliseTecnicaGerente.analiseTecnicaValidacao.idAnalistaTecnico =
					validacaoAnaliseTecnicaGerente.analiseTecnica.analistasTecnicos[0].usuario.id;                
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
			});

		analistaService.getAnalistasTecnicos()
			.then(function(response){
<<<<<<< HEAD
				validacaoAnaliseTecnica.analistas = response.data;
=======
				validacaoAnaliseTecnicaGerente.analistas = response.data;
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
			});            
		
		$rootScope.$broadcast('atualizarContagemProcessos');        
    }

	function exibirDadosProcesso() {

        var processo = {

<<<<<<< HEAD
            idProcesso: validacaoAnaliseTecnica.analiseTecnica.analise.processo.id,
            numero: validacaoAnaliseTecnica.analiseTecnica.analise.processo.numero,
            denominacaoEmpreendimento: validacaoAnaliseTecnica.analiseTecnica.analise.processo.empreendimento.denominacao
        };

        if(validacaoAnaliseTecnica.analiseTecnica.analise.processo.empreendimento.pessoa.cnpj) {

            processo.cnpjEmpreendimento = validacaoAnaliseTecnica.analiseTecnica.analise.processo.empreendimento.pessoa.cnpj;

        } else {

            processo.cpfEmpreendimento = validacaoAnaliseTecnica.analiseTecnica.analise.processo.empreendimento.pessoa.cpf;
=======
            idProcesso: validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.id,
            numero: validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.numero,
            denominacaoEmpreendimento: validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.empreendimento.denominacao
        };

        if(validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.empreendimento.pessoa.cnpj) {

            processo.cnpjEmpreendimento = validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.empreendimento.pessoa.cnpj;

        } else {

            processo.cpfEmpreendimento = validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.empreendimento.pessoa.cpf;
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
        }		

        processoService.visualizarProcesso(processo);
    }    

    function exibirAnaliseJuridica() {

<<<<<<< HEAD
        processoService.getAnaliseJuridica(validacaoAnaliseTecnica.analiseTecnica.analise.processo.id)
=======
        processoService.getAnaliseJuridica(validacaoAnaliseTecnicaGerente.analiseTecnica.analise.processo.id)
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
            .then(function(response){

                var modalInstance = $uibModal.open({

                    component: 'modalInformacoesAnaliseJuridica',
                    size: 'lg',
                    backdrop: 'static',
                    resolve: {

                        idAnalise: function() {

                            return response.data.id;
                        }
                    }    
                });    
            });
    }

    function downloadDocumentoAnalise(idDocumento) {

        documentoAnaliseService.download(idDocumento);
    }

	function isParecerNaoValidado() {

<<<<<<< HEAD
		return validacaoAnaliseTecnica.analiseTecnicaValidacao.idTipoResultadoValidacao === 
                                validacaoAnaliseTecnica.TiposResultadoAnalise.PARECER_NAO_VALIDADO;
=======
		return validacaoAnaliseTecnicaGerente.analiseTecnicaValidacao.idTipoResultadoValidacaoGerente === 
                                validacaoAnaliseTecnicaGerente.TiposResultadoAnalise.PARECER_NAO_VALIDADO;
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
	}

	function isObrigatorio() {
		
<<<<<<< HEAD
        return [validacaoAnaliseTecnica.TiposResultadoAnalise.PARECER_NAO_VALIDADO,
				validacaoAnaliseTecnica.TiposResultadoAnalise.SOLICITAR_AJUSTES]
				.indexOf(validacaoAnaliseTecnica.analiseTecnicaValidacao.idTipoResultadoValidacao) !== -1;
=======
        return [validacaoAnaliseTecnicaGerente.TiposResultadoAnalise.PARECER_NAO_VALIDADO,
				validacaoAnaliseTecnicaGerente.TiposResultadoAnalise.SOLICITAR_AJUSTES]
				.indexOf(validacaoAnaliseTecnicaGerente.analiseTecnicaValidacao.idTipoResultadoValidacaoGerente) !== -1;
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
	}

    function cancelar() {

        $location.path('aguardando-validacao');
    }

	function montarAnaliseTecnica(analiseTecnicaValidacao){
		return {
<<<<<<< HEAD
			id: validacaoAnaliseTecnica.analiseTecnica.id,
			tipoResultadoValidacao: { id : analiseTecnicaValidacao.idTipoResultadoValidacao},
			parecerValidacao: analiseTecnicaValidacao.parecerValidacao,
=======
			id: validacaoAnaliseTecnicaGerente.analiseTecnica.id,
			tipoResultadoValidacaoGerente: { id : analiseTecnicaValidacao.idTipoResultadoValidacaoGerente},
			parecerValidacaoGerente: analiseTecnicaValidacao.parecerValidacaoGerente,
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
			analistasTecnicos:[ 
				{
					usuario: {
						id: analiseTecnicaValidacao.idAnalistaTecnico
					}
				}
			]
		};
	}    

	function concluir() {

		$scope.formularioValidacao.$setSubmitted();

		if (!$scope.formularioValidacao.$valid){

            mensagem.error('Preencha os campos destacados em vermelho para prosseguir com a validação.');
			return;
        }

<<<<<<< HEAD
        var analiseTecnica = montarAnaliseTecnica(validacaoAnaliseTecnica.analiseTecnicaValidacao);

		analiseTecnicaService.validarParecer(analiseTecnica)
=======
        var analiseTecnica = montarAnaliseTecnica(validacaoAnaliseTecnicaGerente.analiseTecnicaValidacao);

		analiseTecnicaService.validarParecerGerente(analiseTecnica)
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
            .then(function(response) {

                mensagem.success(response.data.texto);
				$location.path('aguardando-validacao');

            }, function(error){

                mensagem.error(error.data.texto);
            });
<<<<<<< HEAD
    }    
};

exports.controllers.ValidacaoAnaliseTecnicaController = ValidacaoAnaliseTecnicaController;
=======
    }
};

exports.controllers.ValidacaoAnaliseTecnicaGerenteController = ValidacaoAnaliseTecnicaGerenteController;
>>>>>>> ae45c0222227c429f9e9fd65bfebb08b42714539
